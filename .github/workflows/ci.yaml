name: CI/CD - Docker Build, Push, and Terraform Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  id-token: write
  contents: read  

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug GitHub OIDC Token
        run: |
          echo "Checking if GitHub OIDC token is available..."
          curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
              "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq .


      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::724772086697:role/GitHubOIDC-Deploy
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin 724772086697.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: docker build -t aws-devops-demo .

      - name: Tag and Push Docker Image to ECR
        run: |
          IMAGE_TAG="${GITHUB_REF_NAME}-$(cut -c1-7 <<< $GITHUB_SHA)"
          ECR_URI=724772086697.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aws-devops-demo

          docker tag aws-devops-demo:latest $ECR_URI:$IMAGE_TAG
          docker tag aws-devops-demo:latest $ECR_URI:latest
          
          docker push $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest

      - name: Set Up Terraform Environment
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init -reconfigure

      - name: Run Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan || echo "No changes detected"

      - name: Apply Terraform Changes (Main Branch Only)
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Force ECS Deployment
        if: github.ref == 'refs/heads/main'
        run: |
          aws ecs update-service --cluster devops-demo-cluster --service devops-demo-service --force-new-deployment --region ${{ secrets.AWS_REGION }}
