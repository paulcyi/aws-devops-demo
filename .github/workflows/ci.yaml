name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::724772086697:role/GitHubActionsECRRole
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init -upgrade -reconfigure
        working-directory: terraform

      - name: Build Docker image
        run: |
          docker build --no-cache -t aws-devops-demo -f Dockerfile .
          docker run --rm aws-devops-demo bash -c "pip list" > pip_list.txt
          cat pip_list.txt
          if ! grep -i "requests" pip_list.txt; then
            echo "Error: requests module not found in image"
            exit 1
          fi
          if ! grep -i "boto3" pip_list.txt; then
            echo "Error: boto3 module not found in image"
            exit 1
          fi
          rm pip_list.txt
        working-directory: .

      - name: Tag and push Docker image to ECR
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          ECR_URI=724772086697.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aws-devops-demo
          docker tag aws-devops-demo:latest $ECR_URI:$IMAGE_TAG
          docker tag aws-devops-demo:latest $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform
